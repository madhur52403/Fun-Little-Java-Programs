/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.io.IOException;

/**
 *
 * @author kev
 */
public class Widget extends javax.swing.JFrame {
    
    int xMouse;
    int yMouse;

    public String OS = "";
    
    public Widget() {
        initComponents();
        
        OS = System.getProperty("os.name");
        System.out.println(OS);    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Close = new javax.swing.JLabel();
        Cancel = new javax.swing.JLabel();
        Shutdown = new javax.swing.JLabel();
        Restart = new javax.swing.JLabel();
        Hibernate = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 200));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                CloseMouseReleased(evt);
            }
        });
        getContentPane().add(Close, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 4, 20, 20));

        Cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                CancelMouseReleased(evt);
            }
        });
        getContentPane().add(Cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(644, 24, 130, 150));

        Shutdown.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Shutdown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ShutdownMouseReleased(evt);
            }
        });
        getContentPane().add(Shutdown, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 24, 160, 160));

        Restart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Restart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RestartMouseReleased(evt);
            }
        });
        getContentPane().add(Restart, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 24, 160, 160));

        Hibernate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Hibernate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                HibernateMouseReleased(evt);
            }
        });
        getContentPane().add(Hibernate, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 160, 160));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/Widget.png"))); // NOI18N
        Background.setText("jLabel1");
        Background.setMaximumSize(new java.awt.Dimension(800, 200));
        Background.setMinimumSize(new java.awt.Dimension(800, 200));
        Background.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BackgroundMouseDragged(evt);
            }
        });
        Background.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BackgroundMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BackgroundMouseReleased(evt);
            }
        });
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 200));

        setSize(new java.awt.Dimension(800, 200));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackgroundMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackgroundMouseReleased
        
    }//GEN-LAST:event_BackgroundMouseReleased

    private void CloseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseReleased
        //this.setVisible(false);
        System.exit(0);
    }//GEN-LAST:event_CloseMouseReleased

    private void ShutdownMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShutdownMouseReleased
        String Exec = "";
        
        if(OS.contains("Windows")){
            Exec = "shutdown -s -t 120";
     try{
         Runtime.getRuntime().exec(Exec);
     }catch(IOException e){
     }
        }
        else if(OS.contains("Mac")){
            Exec = "sudo shutdown -h +2";
            try{
                Runtime.getRuntime().exec(Exec);
            }catch(IOException e){
         }
        }
        else if(OS.contains("Linux")){
            Exec = "shutdown -h now";
            try{
                Runtime.getRuntime().exec(Exec);
            }catch(IOException e){
         }
        }
        else{
            System.out.println("OS not supported yet!");
        }
    }//GEN-LAST:event_ShutdownMouseReleased

    private void RestartMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RestartMouseReleased
       String Exec = "";
        
        if(OS.contains("Windows")){
            Exec = "shutdown -r -t 120";
     try{
         Runtime.getRuntime().exec(Exec);
     }catch(IOException e){
     }
        }
        else if(OS.contains("Mac")){
            Exec = "sudo shutdown -r +2";
            try{
                Runtime.getRuntime().exec(Exec);
            }catch(IOException e){
         }
        }
        else if(OS.contains("Linux")){
            Exec = "shutdown -r now";
            try{
                Runtime.getRuntime().exec(Exec);
            }catch(IOException e){
         }
        }
        else{
            System.out.println("OS not supported yet!");
        }
    }//GEN-LAST:event_RestartMouseReleased

    private void HibernateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HibernateMouseReleased
        String Exec = "";
        
        if(OS.contains("Windows")){
            Exec = "shutdown -h";
     try{
         Runtime.getRuntime().exec(Exec);
     }catch(IOException e){
     }
        }
        else if(OS.contains("Mac")){
            Exec = "sudo shutdown -s +2";
            try{
                Runtime.getRuntime().exec(Exec);
            }catch(IOException e){
         }
        }
        else if(OS.contains("Linux")){
            Exec = "sudo pm-hibernate";
            try{
                Runtime.getRuntime().exec(Exec);
            }catch(IOException e){
         }
        }
        else{
            System.out.println("OS not supported yet!");
        }
    }//GEN-LAST:event_HibernateMouseReleased

    private void CancelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelMouseReleased
        String Exec = "";
        
        if(OS.contains("Windows")){
            Exec = "shutdown -a";
     try{
         Runtime.getRuntime().exec(Exec);
     }catch(IOException e){
     }
        }
        else if(OS.contains("Mac")){
            Exec = "sudo killall shutdown";
            try{
                Runtime.getRuntime().exec(Exec);
            }catch(IOException e){
         }
        }
        else if(OS.contains("Linux")){
            Exec = "sudo pm-suspend";
            try{
                Runtime.getRuntime().exec(Exec);
            }catch(IOException e){
         }
        }
        else{
            System.out.println("OS not supported yet!");
        }
    }//GEN-LAST:event_CancelMouseReleased

    private void BackgroundMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackgroundMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_BackgroundMousePressed

    private void BackgroundMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackgroundMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x -xMouse, y -yMouse);
    }//GEN-LAST:event_BackgroundMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Widget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Widget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Widget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Widget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Widget().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JLabel Cancel;
    private javax.swing.JLabel Close;
    private javax.swing.JLabel Hibernate;
    private javax.swing.JLabel Restart;
    private javax.swing.JLabel Shutdown;
    // End of variables declaration//GEN-END:variables
}
